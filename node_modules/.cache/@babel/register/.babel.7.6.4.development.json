{
  "{\"sourceRoot\":\"/home/ken/audit-project/audit-bright/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/ken/audit-project/audit-bright\",\"filename\":\"/home/ken/audit-project/audit-bright/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/ken/audit-project/audit-bright\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/ken/audit-project/audit-bright/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/ken/audit-project/audit-bright",
      "filename": "/home/ken/audit-project/audit-bright/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/ken/audit-project/audit-bright",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/ken/audit-project/audit-bright/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/ken/audit-project/audit-bright/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/ken/audit-project/audit-bright/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// followed a tutorial @ \n// https://www.robinwieruch.de/node-js-express-tutorial\nvar lighthouse = require('lighthouse');\n\nvar chromeLauncher = require('chrome-launcher');\n\nvar fs = require('fs');\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n})); //write json for debugging purposes\n\nfunction makeJson(jsonString) {\n  fs.writeFile('./myPayload.json', jsonString, function (err) {\n    if (err) {\n      console.log('Error writing file', err);\n    } else {\n      console.log('Successfully wrote file');\n    }\n  });\n} //@license Lighthouse Copyright 2017 Google Inc.\n//Code from Documentation\n//https://github.com/GoogleChrome/lighthouse.git\n\n\nconsole.log(\"test started\");\n\nfunction launchChromeAndRunLighthouse(url) {\n  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return chromeLauncher.launch(flags).then(function (chrome) {\n    flags.port = chrome.port;\n    return lighthouse(url, flags, config).then(function (results) {\n      return chrome.kill().then(function () {\n        return results;\n      });\n    });\n  });\n}\n\nvar log = require('lighthouse-logger');\n\nvar flags = {\n  logLevel: 'info',\n  chromeFlags: ['--headless'] // Available categories: accessibility, best-practices, performance, pwa, seo.\n  // onlyCategories: ['performance'],\n\n};\nlog.setLevel(flags.logLevel); //logging ends\n//REST API\n// cors to bypass Cross-orgin request error\n\napp.use((0, _cors[\"default\"])());\nvar messages = {\n  1: {\n    id: '1',\n    text: 'Hello World',\n    userId: '1'\n  }\n};\nvar auditPayload = {\n  1: {\n    id: '1'\n  }\n};\napp.get('/', function (req, res) {\n  res.send('Hello World!');\n});\napp.post('/messages', function (req, res) {\n  var id = (0, _v[\"default\"])();\n  var message = {\n    id: id,\n    text: req.body.text\n  };\n  messages[id] = message;\n  console.log(\"message received \" + message.text);\n  launchChromeAndRunLighthouse(message.text, flags).then(function (results) {\n    makeJson(results.report);\n    return res.send(results.report);\n  });\n});\napp.listen(3000, function () {\n  return console.log('app listening to port 3000');\n});\napp.listen(process.env.PORT, function () {\n  return console.log(\"Example app listening on port \".concat(process.env.PORT, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxpZ2h0aG91c2UiLCJyZXF1aXJlIiwiY2hyb21lTGF1bmNoZXIiLCJmcyIsImFwcCIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwibWFrZUpzb24iLCJqc29uU3RyaW5nIiwid3JpdGVGaWxlIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImxhdW5jaENocm9tZUFuZFJ1bkxpZ2h0aG91c2UiLCJ1cmwiLCJmbGFncyIsImNvbmZpZyIsImxhdW5jaCIsInRoZW4iLCJjaHJvbWUiLCJwb3J0IiwicmVzdWx0cyIsImtpbGwiLCJsb2dMZXZlbCIsImNocm9tZUZsYWdzIiwic2V0TGV2ZWwiLCJtZXNzYWdlcyIsImlkIiwidGV4dCIsInVzZXJJZCIsImF1ZGl0UGF5bG9hZCIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJwb3N0IiwibWVzc2FnZSIsImJvZHkiLCJyZXBvcnQiLCJsaXN0ZW4iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUxBO0FBQ0E7QUFLQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxZQUFELENBQTFCOztBQUNBLElBQU1DLGNBQWMsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQTlCOztBQUNBLElBQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBRUEsSUFBTUcsR0FBRyxHQUFHLDBCQUFaO0FBRUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyxvQkFBUUMsSUFBUixFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyxvQkFBUUUsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSLEUsQ0FFQTs7QUFDQSxTQUFTQyxRQUFULENBQWtCQyxVQUFsQixFQUE2QjtBQUMzQlIsRUFBQUEsRUFBRSxDQUFDUyxTQUFILENBQWEsa0JBQWIs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R0FBUixDQUFZLDRCQUFaLENBRGE7QUFBQSxDQUFqQjtBQUlBWCxHQUFHLENBQUNzQyxNQUFKLENBQVdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUF2QixFQUE2QjtBQUFBLFNBQzNCL0IsT0FBTyxDQUFDQyxHQUFSLHlDQUE2QzRCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUF6RCxPQUQyQjtBQUFBLENBQTdCIiwic291cmNlUm9vdCI6Ii9ob21lL2tlbi9hdWRpdC1wcm9qZWN0L2F1ZGl0LWJyaWdodC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmb2xsb3dlZCBhIHR1dG9yaWFsIEAgXG4vLyBodHRwczovL3d3dy5yb2JpbndpZXJ1Y2guZGUvbm9kZS1qcy1leHByZXNzLXR1dG9yaWFsXG5pbXBvcnQgJ2RvdGVudi9jb25maWcnO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB1dWlkdjQgZnJvbSAndXVpZC92NCc7XG5jb25zdCBsaWdodGhvdXNlID0gcmVxdWlyZSgnbGlnaHRob3VzZScpO1xuY29uc3QgY2hyb21lTGF1bmNoZXIgPSByZXF1aXJlKCdjaHJvbWUtbGF1bmNoZXInKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpXG5cbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5cbi8vd3JpdGUganNvbiBmb3IgZGVidWdnaW5nIHB1cnBvc2VzXG5mdW5jdGlvbiBtYWtlSnNvbihqc29uU3RyaW5nKXtcbiAgZnMud3JpdGVGaWxlKCcuL215UGF5bG9hZC5qc29uJywganNvblN0cmluZywgZXJyID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdFcnJvciB3cml0aW5nIGZpbGUnLCBlcnIpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSB3cm90ZSBmaWxlJylcbiAgICB9XG59KVxufVxuXG4vL0BsaWNlbnNlIExpZ2h0aG91c2UgQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy5cbi8vQ29kZSBmcm9tIERvY3VtZW50YXRpb25cbi8vaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS9saWdodGhvdXNlLmdpdFxuXG5cbmNvbnNvbGUubG9nKFwidGVzdCBzdGFydGVkXCIpXG5cbmZ1bmN0aW9uIGxhdW5jaENocm9tZUFuZFJ1bkxpZ2h0aG91c2UodXJsLCBmbGFncyA9IHt9LCBjb25maWcgPSBudWxsKSB7XG4gIHJldHVybiBjaHJvbWVMYXVuY2hlci5sYXVuY2goZmxhZ3MpLnRoZW4oY2hyb21lID0+IHtcbiAgICBmbGFncy5wb3J0ID0gY2hyb21lLnBvcnQ7XG4gICAgcmV0dXJuIGxpZ2h0aG91c2UodXJsLCBmbGFncywgY29uZmlnKS50aGVuKHJlc3VsdHMgPT5cbiAgICAgIGNocm9tZS5raWxsKCkudGhlbigoKSA9PiByZXN1bHRzXG4gICAgICApKTtcbiAgfSk7XG59XG5cbmNvbnN0IGxvZyA9IHJlcXVpcmUoJ2xpZ2h0aG91c2UtbG9nZ2VyJyk7XG5cbmNvbnN0IGZsYWdzID0ge1xuICAgIGxvZ0xldmVsOiAnaW5mbycsXG4gICAgY2hyb21lRmxhZ3M6IFsnLS1oZWFkbGVzcyddLFxuICAgIC8vIEF2YWlsYWJsZSBjYXRlZ29yaWVzOiBhY2Nlc3NpYmlsaXR5LCBiZXN0LXByYWN0aWNlcywgcGVyZm9ybWFuY2UsIHB3YSwgc2VvLlxuICAgIC8vIG9ubHlDYXRlZ29yaWVzOiBbJ3BlcmZvcm1hbmNlJ10sXG59O1xuXG5sb2cuc2V0TGV2ZWwoZmxhZ3MubG9nTGV2ZWwpO1xuLy9sb2dnaW5nIGVuZHNcblxuLy9SRVNUIEFQSVxuLy8gY29ycyB0byBieXBhc3MgQ3Jvc3Mtb3JnaW4gcmVxdWVzdCBlcnJvclxuYXBwLnVzZShjb3JzKCkpXG5cbmxldCBtZXNzYWdlcyA9IHtcbiAgICAxOiB7XG4gICAgICBpZDogJzEnLFxuICAgICAgdGV4dDogJ0hlbGxvIFdvcmxkJyxcbiAgICAgIHVzZXJJZDogJzEnLFxuICAgIH0sXG59O1xuXG5sZXQgYXVkaXRQYXlsb2FkID0ge1xuICAxOntcbiAgICBpZDonMSdcbiAgfVxufVxuXG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc2VuZCgnSGVsbG8gV29ybGQhJyk7XG59KTtcblxuYXBwLnBvc3QoJy9tZXNzYWdlcycsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IGlkID0gdXVpZHY0KCk7XG4gICAgY29uc3QgbWVzc2FnZSA9IHtcbiAgICAgICAgaWQsXG4gICAgICAgIHRleHQ6IHJlcS5ib2R5LnRleHQsXG4gICAgfTtcbiAgICBtZXNzYWdlc1tpZF0gPSBtZXNzYWdlO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKFwibWVzc2FnZSByZWNlaXZlZCBcIiArIG1lc3NhZ2UudGV4dClcbiAgICBsYXVuY2hDaHJvbWVBbmRSdW5MaWdodGhvdXNlKG1lc3NhZ2UudGV4dCwgZmxhZ3MpLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICBtYWtlSnNvbihyZXN1bHRzLnJlcG9ydClcbiAgICAgIHJldHVybiByZXMuc2VuZChyZXN1bHRzLnJlcG9ydClcbiAgICB9KVxufSk7XG5cbmFwcC5saXN0ZW4oMzAwMCwgKCkgPT4gXG4gICAgY29uc29sZS5sb2coJ2FwcCBsaXN0ZW5pbmcgdG8gcG9ydCAzMDAwJylcbik7XG5cbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCwgKCkgPT5cbiAgY29uc29sZS5sb2coYEV4YW1wbGUgYXBwIGxpc3RlbmluZyBvbiBwb3J0ICR7cHJvY2Vzcy5lbnYuUE9SVH0hYCksXG4pO1xuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "lighthouse",
        "require",
        "chromeLauncher",
        "fs",
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "makeJson",
        "jsonString",
        "writeFile",
        "err",
        "console",
        "log",
        "launchChromeAndRunLighthouse",
        "url",
        "flags",
        "config",
        "launch",
        "then",
        "chrome",
        "port",
        "results",
        "kill",
        "logLevel",
        "chromeFlags",
        "setLevel",
        "messages",
        "id",
        "text",
        "userId",
        "auditPayload",
        "get",
        "req",
        "res",
        "send",
        "post",
        "message",
        "body",
        "report",
        "listen",
        "process",
        "env",
        "PORT"
      ],
      "mappings": "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",
      "sourceRoot": "/home/ken/audit-project/audit-bright/src",
      "sourcesContent": [
        "// followed a tutorial @ \n// https://www.robinwieruch.de/node-js-express-tutorial\nimport 'dotenv/config';\nimport cors from 'cors';\nimport express from 'express';\nimport uuidv4 from 'uuid/v4';\nconst lighthouse = require('lighthouse');\nconst chromeLauncher = require('chrome-launcher');\nconst fs = require('fs');\n\nconst app = express()\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n//write json for debugging purposes\nfunction makeJson(jsonString){\n  fs.writeFile('./myPayload.json', jsonString, err => {\n    if (err) {\n        console.log('Error writing file', err)\n    } else {\n        console.log('Successfully wrote file')\n    }\n})\n}\n\n//@license Lighthouse Copyright 2017 Google Inc.\n//Code from Documentation\n//https://github.com/GoogleChrome/lighthouse.git\n\n\nconsole.log(\"test started\")\n\nfunction launchChromeAndRunLighthouse(url, flags = {}, config = null) {\n  return chromeLauncher.launch(flags).then(chrome => {\n    flags.port = chrome.port;\n    return lighthouse(url, flags, config).then(results =>\n      chrome.kill().then(() => results\n      ));\n  });\n}\n\nconst log = require('lighthouse-logger');\n\nconst flags = {\n    logLevel: 'info',\n    chromeFlags: ['--headless'],\n    // Available categories: accessibility, best-practices, performance, pwa, seo.\n    // onlyCategories: ['performance'],\n};\n\nlog.setLevel(flags.logLevel);\n//logging ends\n\n//REST API\n// cors to bypass Cross-orgin request error\napp.use(cors())\n\nlet messages = {\n    1: {\n      id: '1',\n      text: 'Hello World',\n      userId: '1',\n    },\n};\n\nlet auditPayload = {\n  1:{\n    id:'1'\n  }\n}\n\n\napp.get('/', (req, res) => {\n    res.send('Hello World!');\n});\n\napp.post('/messages', (req, res) => {\n    const id = uuidv4();\n    const message = {\n        id,\n        text: req.body.text,\n    };\n    messages[id] = message;\n    \n    console.log(\"message received \" + message.text)\n    launchChromeAndRunLighthouse(message.text, flags).then(results => {\n      makeJson(results.report)\n      return res.send(results.report)\n    })\n});\n\napp.listen(3000, () => \n    console.log('app listening to port 3000')\n);\n\napp.listen(process.env.PORT, () =>\n  console.log(`Example app listening on port ${process.env.PORT}!`),\n);\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572846395532
  }
}